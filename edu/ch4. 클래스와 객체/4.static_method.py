# 클래스 : 속성 + 메서드
"""
클래스 만들기
class "클래스이름" :
pass #나중에 구현 하겠다는 뜻

객체 만들기
인스턴스 = 클래스이름()

인스턴스 속성(객체 마다 다른 속성)
클래스 안 : self.속성명
클래스 밖 : 객체명(인스턴스).속성명

클래스 속성(모든 객체가 공유하는 속성)

비공개 속성(클래스 안에서만 접근 가능한 속성)
-> 접근이 어려움, 네임 맹글링을 이용하면 접근가능

인스턴스 메서드 : 인스턴스 속성에 접근할 수 있는 메서드
항상 첫번째 파라미터로 self를 가진다.

클래스 메서드 : 클래스 속성에 접근하기 위해서 사용
-> 클래스를 의미하는 cls를 파라미터로 받는다.

정적 메서드 : 인스턴스를 만들 필요가 없는 메서드
- self를 받지 않는다
- 메서드가 인스턴스 유무와 관계없이 독립적으로 사용될때

매직 메서드 : 클래스안에 정의할 수 있는 스페셜 메서드
- 특별한 상황에 호출된다. #__init__
- __이름__의 형태로 되어있다.

"""

class Math:
    #정적 메서드(static method)
    #인스턴스를 만들 필요가 없는 메서드
    @staticmethod
    def add(x, y):
        return x+y
    
    @staticmethod
    def sub(x,y):
        return x-y
    
print(Math.add(3,4))
print(Math.sub(3,4))